#!/usr/bin/env bash

# Set up variables
BUTTON_VOLUME=$(</usr/src/button_volume)

VOLUME_UP_GPIO=$(</usr/src/volume_up_gpio)

BLUETOOTH_GPIO=$(</usr/src/bluetooth_gpio)

VOLUME_DOWN_GPIO=$(</usr/src/volume_down_gpio)

SYSTEM_OUTPUT_VOLUME=$(</usr/src/system_output_volume)

TIMER="0"

# Set up + volume
if [[ ! -d /sys/class/gpio/gpio$VOLUME_UP_GPIO ]]; then
  echo "$VOLUME_UP_GPIO" > /sys/class/gpio/export
  sleep 1 
fi
echo "in" > /sys/class/gpio/gpio$VOLUME_UP_GPIO/direction

# Set up bluetooth
if [[ ! -d /sys/class/gpio/gpio$BLUETOOTH_GPIO ]]; then
  echo "$BLUETOOTH_GPIO" > /sys/class/gpio/export
  sleep 1 
fi
echo "in" > /sys/class/gpio/gpio$BLUETOOTH_GPIO/direction

# Set up - volume
if [[ ! -d /sys/class/gpio/gpio$BLUETOOTH_GPIO ]]; then
  echo "$BLUETOOTH_GPIO" > /sys/class/gpio/export
  sleep 1 
fi
echo "in" > /sys/class/gpio/gpio$BLUETOOTH_GPIO/direction

while : ; do

if [[ ! -z "$(echo "$(amixer -D bluealsa scontrols)" | sed -n " s,[^']*'\([^']*\).*,\1,p ")" ]]; then

DEVICE="$(echo "$(amixer -D bluealsa scontrols)" | sed -n " s,[^']*'\([^']*\).*,\1,p ")"
MAC="$(cat /var/cache/bluetooth/reconnect_device)"
MAC_PARSED="$(echo ${MAC//:/_})"

# Volume up
if [[ "$(cat /sys/class/gpio/gpio$VOLUME_UP_GPIO/value)" == 1 ]]; then
  amixer -D bluealsa sset "$DEVICE" 10%+
  sleep 0.5
fi

while "$(cat /sys/class/gpio/gpio$BLUETOOTH_GPIO/value)" == 1 ; do
if [[ "$TIMER" < 3 ]]; then

TIMER=$($TIMER++)
sleep 0.5

else
#dbussend --system --dest=org.bluez --print-reply /org/bluez/hci0/dev_$MAC_PARSED org.bluez.MediaControl1.Play > /dev/null
fi
done

TIMER="0"

# Volume down
if [[ "$(cat /sys/class/gpio/gpio$VOLUME_DOWN_GPIO/value)" == 1 ]]; then
  amixer -D bluealsa sset "$DEVICE" 10%-
  sleep 0.5
fi

fi

done
